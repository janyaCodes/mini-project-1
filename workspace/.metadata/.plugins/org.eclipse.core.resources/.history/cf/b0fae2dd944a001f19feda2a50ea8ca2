package com.demo.reminder.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import com.demo.reminder.type.Event;
import com.demo.reminder.util.DBUtil;

public class EventDAO {
	
	public void addEvent(Event event) throws SQLException, ParseException{
		String sql = "INSERT INTO EVENT (EVENT_NAME, FREQUENCY, TIME, DAY, DATE) VALUES (?, ?, ?, ?, ?)";
        try (Connection conn = DBUtil.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, event.getName());
            stmt.setString(2, event.getFrequency());
            stmt.setTime(3, Time.valueOf(event.getTime() + ":00"));
            stmt.setString(4, event.getDaysOfWeek() != null ? String.join(",", event.getDaysOfWeek()) : null);            
            stmt.setDate(5, event.getDate() != null ? (new java.sql.Date((new SimpleDateFormat("yyyy-MM-dd").parse(event.getDate())).getTime())) : null);
            int result = stmt.executeUpdate();
        }
	}
	
	
	public List<Event> getEventsToNotify() throws SQLException{
		List<Event> events = new ArrayList<Event>();
		
		String sql= "select * from event\n"
				+ "WHERE\n"
				+ "  (frequency = 'daily' AND time BETWEEN CURTIME() AND ADDTIME(CURTIME(), '00:02:00'))\n"
				+ "  OR (frequency = 'weekly' AND FIND_IN_SET(DAYOFWEEK(CURDATE()), day)  AND time BETWEEN CURTIME() AND ADDTIME(CURTIME(), '00:02:00'))\n"
				+ "  OR (frequency = 'once' AND date = CURDATE() AND time BETWEEN CURTIME() AND ADDTIME(CURTIME(), '00:02:00'))";
		
		 try (Connection conn = DBUtil.getConnection();
	             PreparedStatement stmt = conn.prepareStatement(sql)){
			 
			 ResultSet resultSet = stmt.executeQuery();
			 
			 Event event = null;
			 while (resultSet.next()) {
				 	String eventName = resultSet.getString("event_name");
				 	String frequency = resultSet.getString("frequency");
				 	String time = resultSet.getTime("time").toString();
				 	String date =  resultSet.getDate("date") != null ? resultSet.getDate("date").toString() : null;
				 	String[] day = resultSet.getString("day") != null ? resultSet.getString("day").split(",") : null;
				 	event = new Event(eventName, frequency, time, date, day);
				 	System.out.println("selected event is :: " + event.toString());
				 	events.add(event);
	            }
		 }		 
		 return events;
	}

}
